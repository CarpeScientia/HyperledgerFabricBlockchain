---
name: first-network-org${ORG}
version: 1.0.0
client:
  organization: Org${ORG}
  connection:
    timeout:
      peer:
        endorser: '300'
organizations:
  Org${ORG}:
    mspid: Org${ORG}MSP
    peers:
    - peer0.org${ORG}.REPLACEMENTMARKER
    - peer1.org${ORG}.REPLACEMENTMARKER
    certificateAuthorities:
    - ca.org${ORG}.REPLACEMENTMARKER
peers:
  peer0.org${ORG}.REPLACEMENTMARKER:
    url: grpcs://localhost:${P0PORT}
    tlsCACerts:
      pem: |
        ${PEERPEM}
    grpcOptions:
      ssl-target-name-override: peer0.org${ORG}.REPLACEMENTMARKER
      hostnameOverride: peer0.org${ORG}.REPLACEMENTMARKER
  peer1.org${ORG}.REPLACEMENTMARKER:
    url: grpcs://localhost:${P1PORT}
    tlsCACerts:
      pem: |
        ${PEERPEM}
    grpcOptions:
      ssl-target-name-override: peer1.org${ORG}.REPLACEMENTMARKER
      hostnameOverride: peer1.org${ORG}.REPLACEMENTMARKER
certificateAuthorities:
  ca.org${ORG}.REPLACEMENTMARKER:
    url: https://localhost:${CAPORT}
    caName: ca-org${ORG}
    tlsCACerts:
      pem: |
        ${CAPEM}
    httpOptions:
      verify: false
orderers:
  orderer.REPLACEMENTMARKER:
    url: grpcs://localhost:7050

    # these are standard properties defined by the gRPC library
    # they will be passed in as-is to gRPC client constructor
    grpcOptions:
      ssl-target-name-override: orderer.REPLACEMENTMARKER
channels:
  # name of the channel
  ${CHANNEL_NAME}:
    # Required. list of orderers designated by the application to use for transactions on this
    # channel. This list can be a result of access control ("org1" can only access "ordererA"), or
    # operational decisions to share loads from applications among the orderers.  The values must
    # be "names" of orgs defined under "organizations/peers"
    orderers:
      - orderer.REPLACEMENTMARKER

    # Required. list of peers from participating orgs
    peers:
      peer0.org1.REPLACEMENTMARKER:
        # [Optional]. will this peer be sent transaction proposals for endorsement? The peer must
        # have the chaincode installed. The app can also use this property to decide which peers
        # to send the chaincode install request. Default: true
        endorsingPeer: true

        # [Optional]. will this peer be sent query proposals? The peer must have the chaincode
        # installed. The app can also use this property to decide which peers to send the
        # chaincode install request. Default: true
        chaincodeQuery: true

        # [Optional]. will this peer be sent query proposals that do not require chaincodes, like
        # queryBlock(), queryTransaction(), etc. Default: true
        ledgerQuery: true

        # [Optional]. will this peer be the target of the SDK's listener registration? All peers can
        # produce events but the app typically only needs to connect to one to listen to events.
        # Default: true
        eventSource: true
        # use this peer for discovery
        discover: true
      peer1.org1.REPLACEMENTMARKER:
        endorsingPeer: true
        chaincodeQuery: true
        ledgerQuery: true
        eventSource: true
        discover: true
                                                                       
